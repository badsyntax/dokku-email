#!/usr/bin/env bash
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x

source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$(dirname $0)/config"

case "$1" in
  email:list)
    cat "$EMAILS_FILE" 2>/dev/null
    ;;

  email:set)
     [[ -z $2 ]] && echo "Please specify an email" && exit 1
    if ! command -v "mail" &>/dev/null; then
      dokku_log_fail Cannot set email. mailutils is not installed
    fi
    echo "$2" >> "$EMAILS_FILE"
    echo "Email added"
    ;;

  email:remove)
    [[ -z $2 ]] && echo "Please specify an email" && exit 1
    grep -Fxv "$2" "$EMAILS_FILE" >"${EMAILS_FILE}.new" 2>/dev/null || :
    mv "${EMAILS_FILE}.new" "$EMAILS_FILE"
    echo "Email removed"
    ;;

  help | email:help)
    help_content_func () {
      # declare desc="return help_content string"
      cat<<help_content
    email:set <email>, Sets an email to be notified for every deployment
    email:remove <email>, Removes an email
    email:list, Shows all emails
help_content
    }

    if [[ $1 = "email:help" ]] ; then
        echo -e 'Usage: dokku email[:command] [<app>] [<email>]'
        echo ''
        echo 'Sends an email on post-deploy'
        echo ''
        echo 'Example:'
        echo ''
        echo '$ dokku email:set myapp email@example.com'
        echo ''
        echo 'Commands:'
        help_content_func | sort | column -c2 -t -s,
    else
        help_content_func
    fi
    ;;

  *)
    exit $DOKKU_NOT_IMPLEMENTED_EXIT
    ;;

esac
